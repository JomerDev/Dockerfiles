version: "3.3"

services:

    traefik:
        image: "traefik:v2.8"
        container_name: "traefik"
        restart: unless-stopped
        command:
            #- "--log.level=DEBUG"
            - "--api.dashboard=true"
            - "--api.insecure=true"
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--entrypoints.web.address=:80"
            - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
            - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
            - "--entryPoints.web.forwardedHeaders.trustedIPs=192.168.178.0/24, 10.6.0.0/24"
            - "--entryPoints.web.proxyProtocol.trustedIPs=192.168.178.0/24, 10.6.0.0/24"
            - "--entryPoints.websecure.forwardedHeaders.trustedIPs=192.168.178.0/24, 10.6.0.0/24"
            - "--entryPoints.websecure.proxyProtocol.trustedIPs=192.168.178.0/24, 10.6.0.0/24"
            - "--entrypoints.websecure.address=:443"
            - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
            - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
            #- "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
            - "--certificatesresolvers.letsencrypt.acme.email=jonathan.gilmer@posteo.de"
            - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
            - "--providers.file.filename=/configs/proxmox-router.yaml"
            - "--providers.docker.endpoint=tcp://socket-proxy:2375"
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - "./letsencrypt:/letsencrypt"
            - "./configs:/configs"
            # - "/var/run/docker.sock:/var/run/docker.sock:ro"
        labels:
            traefik.enable: true
            traefik.http.routers.traefik.rule: Host(`traefik.jomer.dev`)
            traefik.http.routers.traefik.entrypoints: websecure
            traefik.http.routers.traefik.tls.certresolver: letsencrypt
            #traefik.http.routers.traefik.rule: Host(`traefik.jomer.dev`)
            traefik.http.routers.traefik.service: api@internal
            traefik.http.routers.traefik.middlewares: internal-network, authelia@docker
            # private network ip whitelist
            traefik.http.middlewares.internal-network.ipwhitelist.sourcerange: "192.168.178.0/24, 10.6.0.0/24"
        networks:
            - pihole_frontend
            - portainer_frontend
            - paperless_frontend
            - nextcloud_frontend
            - invoiceninja_frontend
            - ig_193_frontend
            - gitea_frontend
            - linkace_frontend
            - whoami_frontend
            - psql-test_frontend
            - rustdesk_frontend
            - ig-nextcloud_frontend
            - collabora_frontend
            - grist_frontend
            - dashy_frontend
            - ldap_frontend
            - authelia_frontend
            - socket_proxy
    
    socket-proxy:
        image: tecnativa/docker-socket-proxy
        container_name: "socket-proxy"
        restart: unless-stopped
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
        environment:
            NETWORKS: 1
            SERVICES: 1
            TASKS: 1
            CONTAINERS: 1
        networks:
            - socket_proxy

networks:
    socket_proxy:
        name: socket_proxy
    nextcloud_frontend:
        name: nextcloud_frontend
    pihole_frontend:
        name: pihole_frontend
    paperless_frontend:
        name: paperless_frontend
    portainer_frontend:
        name: portainer_frontend
    invoiceninja_frontend:
        name: invoiceninja_frontend
    ig_193_frontend:
        name: ig_193_frontend
    gitea_frontend:
        name: gitea_frontend
    linkace_frontend:
        name: linkace_frontend
    whoami_frontend:
        name: whoami_frontend
    psql-test_frontend:
        name: psql-test_frontend
    rustdesk_frontend:
        name: rustdesk_frontend
    ig-nextcloud_frontend:
        name: ig-nextcloud_frontend
    collabora_frontend:
        name: collabora_frontend
    grist_frontend:
        name: grist_frontend
    dashy_frontend:
        name: dashy_frontend
    ldap_frontend:
        name: ldap_frontend
    authelia_frontend:
        name: authelia_frontend